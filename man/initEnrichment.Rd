% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/enrichment_functions.r
\name{initEnrichment}
\alias{initEnrichment}
\title{Generate bmetenrichr enrichment object}
\usage{
initEnrichment(
  scmatrix,
  annotations,
  annotation.weights = NULL,
  conditions,
  include = NULL,
  pathway = "LION",
  termsOfInterest = "selection",
  condition.x = NULL,
  condition.y = NULL,
  ranking.by = "t.test"
)
}
\arguments{
\item{scmatrix}{A numeric matrix of n metabolites (rows) and m cells or measurments (columns).}

\item{annotations}{Either (i) a list of length n, with each element contains a vector of isomer names,
or (ii) a vector of length n containing molecular formulas with ("C44H84NO8P.H") or without adduct ("C44H84NO8P").}

\item{annotation.weights}{An optional list of length n, each element contains a vector of isomer weights. Only when annotations is provided as list.}

\item{conditions}{A vector of length m with condition identifiers.}

\item{include}{An optional logical vector of length n indicating whether to include the annotations in the analysis.}

\item{pathway}{A named list with character vectors of metabolite names. When default 'LION' is used, bmetenrichr uses the preset LION metabolite set.}

\item{termsOfInterest}{A character containing 'selection' (for default LION-term selection), 'all', or a vector of term names (see 'pathway').}

\item{condition.x}{first condition identifier for pairwise comparison.}

\item{condition.y}{second condition identifier for pairwise comparison.}

\item{ranking.by}{A character of either 't.test' or 'wilcox.test', to rank metabolites for the respective statistic.}
}
\value{
An object of class bmetenrich.
}
\description{
initEnrichment() creates object to perform bootstrapping metabolite set enrichment analysis
}
\examples{
myTestRun <-
initEnrichment(scmatrix = scMatrix,
                   annotations = my_annotations,
                   annotation.weights = my_weights,
                   conditions = my_conditions,
                   condition.x = "A",
                   condition.y = "B" )


}
